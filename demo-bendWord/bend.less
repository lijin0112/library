.logo { perspective: 1000px; perspective-origin: 50% 0; font-size: 8em; display: inline-flex; }
.logo span { font-family: impact; display: block; }
/*
.logo span:nth-child(1) { transform-origin: 33.33333333% 200%;
  font-size: 1.035em;
  transform: scale(65.9, 1) rotatey(89.5deg);
}
.logo span:nth-child(2) { transform-origin: 25% 200%;
  font-size: 0.96em;
  transform: scale(75.9, 1) rotatey(89.5deg);
}
.logo span:nth-child(3) { transform-origin: 0% 200%;
  font-size: 0.915em;
  transform: scale(85.9, 1) rotatey(89.5deg);
}
.logo span:nth-child(4) { transform-origin: Infinity% 200%;
  font-size: 0.85em;
  transform: scale(1, 1) translatey(0%);
}
.logo span:nth-child(5) { transform-origin: 100% 200%;
  font-size: 0.915em;
  transform: scale(85.9, 1) rotatey(-89.5deg);
}
.logo span:nth-child(6) { transform-origin: 75% 200%;
  font-size: 0.96em;
  transform: scale(75.9, 1) rotatey(-89.5deg);
}
.logo span:nth-child(7) { transform-origin: 66.66666667% 200%;
  font-size: 1.035em;
  transform: scale(65.9, 1) rotatey(-89.5deg);
}
*/

// 通过递归实现循环
.generate-columns(7);
.generate-columns(@n, @i: 1) when (@i =< @n) {
  　　.logo span:nth-child(@{i}) {
    transform: scale(85.9, 1) rotatey(95.9 - @i * 10);
    //width: (@i * 100% / @n);
  }
  .generate-columns(@n, (@i + 1));
}